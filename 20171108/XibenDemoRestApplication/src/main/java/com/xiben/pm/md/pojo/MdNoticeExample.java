package com.xiben.pm.md.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class MdNoticeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public MdNoticeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andNoticeidIsNull() {
            addCriterion("noticeid is null");
            return (Criteria) this;
        }

        public Criteria andNoticeidIsNotNull() {
            addCriterion("noticeid is not null");
            return (Criteria) this;
        }

        public Criteria andNoticeidEqualTo(Integer value) {
            addCriterion("noticeid =", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidNotEqualTo(Integer value) {
            addCriterion("noticeid <>", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidGreaterThan(Integer value) {
            addCriterion("noticeid >", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidGreaterThanOrEqualTo(Integer value) {
            addCriterion("noticeid >=", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidLessThan(Integer value) {
            addCriterion("noticeid <", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidLessThanOrEqualTo(Integer value) {
            addCriterion("noticeid <=", value, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidIn(List<Integer> values) {
            addCriterion("noticeid in", values, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidNotIn(List<Integer> values) {
            addCriterion("noticeid not in", values, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidBetween(Integer value1, Integer value2) {
            addCriterion("noticeid between", value1, value2, "noticeid");
            return (Criteria) this;
        }

        public Criteria andNoticeidNotBetween(Integer value1, Integer value2) {
            addCriterion("noticeid not between", value1, value2, "noticeid");
            return (Criteria) this;
        }

        public Criteria andMsgcontentIsNull() {
            addCriterion("msgcontent is null");
            return (Criteria) this;
        }

        public Criteria andMsgcontentIsNotNull() {
            addCriterion("msgcontent is not null");
            return (Criteria) this;
        }

        public Criteria andMsgcontentEqualTo(String value) {
            addCriterion("msgcontent =", value, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentNotEqualTo(String value) {
            addCriterion("msgcontent <>", value, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentGreaterThan(String value) {
            addCriterion("msgcontent >", value, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentGreaterThanOrEqualTo(String value) {
            addCriterion("msgcontent >=", value, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentLessThan(String value) {
            addCriterion("msgcontent <", value, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentLessThanOrEqualTo(String value) {
            addCriterion("msgcontent <=", value, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentLike(String value) {
            addCriterion("msgcontent like", value, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentNotLike(String value) {
            addCriterion("msgcontent not like", value, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentIn(List<String> values) {
            addCriterion("msgcontent in", values, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentNotIn(List<String> values) {
            addCriterion("msgcontent not in", values, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentBetween(String value1, String value2) {
            addCriterion("msgcontent between", value1, value2, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andMsgcontentNotBetween(String value1, String value2) {
            addCriterion("msgcontent not between", value1, value2, "msgcontent");
            return (Criteria) this;
        }

        public Criteria andBiztypeIsNull() {
            addCriterion("biztype is null");
            return (Criteria) this;
        }

        public Criteria andBiztypeIsNotNull() {
            addCriterion("biztype is not null");
            return (Criteria) this;
        }

        public Criteria andBiztypeEqualTo(Integer value) {
            addCriterion("biztype =", value, "biztype");
            return (Criteria) this;
        }

        public Criteria andBiztypeNotEqualTo(Integer value) {
            addCriterion("biztype <>", value, "biztype");
            return (Criteria) this;
        }

        public Criteria andBiztypeGreaterThan(Integer value) {
            addCriterion("biztype >", value, "biztype");
            return (Criteria) this;
        }

        public Criteria andBiztypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("biztype >=", value, "biztype");
            return (Criteria) this;
        }

        public Criteria andBiztypeLessThan(Integer value) {
            addCriterion("biztype <", value, "biztype");
            return (Criteria) this;
        }

        public Criteria andBiztypeLessThanOrEqualTo(Integer value) {
            addCriterion("biztype <=", value, "biztype");
            return (Criteria) this;
        }

        public Criteria andBiztypeIn(List<Integer> values) {
            addCriterion("biztype in", values, "biztype");
            return (Criteria) this;
        }

        public Criteria andBiztypeNotIn(List<Integer> values) {
            addCriterion("biztype not in", values, "biztype");
            return (Criteria) this;
        }

        public Criteria andBiztypeBetween(Integer value1, Integer value2) {
            addCriterion("biztype between", value1, value2, "biztype");
            return (Criteria) this;
        }

        public Criteria andBiztypeNotBetween(Integer value1, Integer value2) {
            addCriterion("biztype not between", value1, value2, "biztype");
            return (Criteria) this;
        }

        public Criteria andBizidIsNull() {
            addCriterion("bizid is null");
            return (Criteria) this;
        }

        public Criteria andBizidIsNotNull() {
            addCriterion("bizid is not null");
            return (Criteria) this;
        }

        public Criteria andBizidEqualTo(Integer value) {
            addCriterion("bizid =", value, "bizid");
            return (Criteria) this;
        }

        public Criteria andBizidNotEqualTo(Integer value) {
            addCriterion("bizid <>", value, "bizid");
            return (Criteria) this;
        }

        public Criteria andBizidGreaterThan(Integer value) {
            addCriterion("bizid >", value, "bizid");
            return (Criteria) this;
        }

        public Criteria andBizidGreaterThanOrEqualTo(Integer value) {
            addCriterion("bizid >=", value, "bizid");
            return (Criteria) this;
        }

        public Criteria andBizidLessThan(Integer value) {
            addCriterion("bizid <", value, "bizid");
            return (Criteria) this;
        }

        public Criteria andBizidLessThanOrEqualTo(Integer value) {
            addCriterion("bizid <=", value, "bizid");
            return (Criteria) this;
        }

        public Criteria andBizidIn(List<Integer> values) {
            addCriterion("bizid in", values, "bizid");
            return (Criteria) this;
        }

        public Criteria andBizidNotIn(List<Integer> values) {
            addCriterion("bizid not in", values, "bizid");
            return (Criteria) this;
        }

        public Criteria andBizidBetween(Integer value1, Integer value2) {
            addCriterion("bizid between", value1, value2, "bizid");
            return (Criteria) this;
        }

        public Criteria andBizidNotBetween(Integer value1, Integer value2) {
            addCriterion("bizid not between", value1, value2, "bizid");
            return (Criteria) this;
        }

        public Criteria andSenduseridIsNull() {
            addCriterion("senduserid is null");
            return (Criteria) this;
        }

        public Criteria andSenduseridIsNotNull() {
            addCriterion("senduserid is not null");
            return (Criteria) this;
        }

        public Criteria andSenduseridEqualTo(Integer value) {
            addCriterion("senduserid =", value, "senduserid");
            return (Criteria) this;
        }

        public Criteria andSenduseridNotEqualTo(Integer value) {
            addCriterion("senduserid <>", value, "senduserid");
            return (Criteria) this;
        }

        public Criteria andSenduseridGreaterThan(Integer value) {
            addCriterion("senduserid >", value, "senduserid");
            return (Criteria) this;
        }

        public Criteria andSenduseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("senduserid >=", value, "senduserid");
            return (Criteria) this;
        }

        public Criteria andSenduseridLessThan(Integer value) {
            addCriterion("senduserid <", value, "senduserid");
            return (Criteria) this;
        }

        public Criteria andSenduseridLessThanOrEqualTo(Integer value) {
            addCriterion("senduserid <=", value, "senduserid");
            return (Criteria) this;
        }

        public Criteria andSenduseridIn(List<Integer> values) {
            addCriterion("senduserid in", values, "senduserid");
            return (Criteria) this;
        }

        public Criteria andSenduseridNotIn(List<Integer> values) {
            addCriterion("senduserid not in", values, "senduserid");
            return (Criteria) this;
        }

        public Criteria andSenduseridBetween(Integer value1, Integer value2) {
            addCriterion("senduserid between", value1, value2, "senduserid");
            return (Criteria) this;
        }

        public Criteria andSenduseridNotBetween(Integer value1, Integer value2) {
            addCriterion("senduserid not between", value1, value2, "senduserid");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridIsNull() {
            addCriterion("receiveuserid is null");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridIsNotNull() {
            addCriterion("receiveuserid is not null");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridEqualTo(Integer value) {
            addCriterion("receiveuserid =", value, "receiveuserid");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridNotEqualTo(Integer value) {
            addCriterion("receiveuserid <>", value, "receiveuserid");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridGreaterThan(Integer value) {
            addCriterion("receiveuserid >", value, "receiveuserid");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("receiveuserid >=", value, "receiveuserid");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridLessThan(Integer value) {
            addCriterion("receiveuserid <", value, "receiveuserid");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridLessThanOrEqualTo(Integer value) {
            addCriterion("receiveuserid <=", value, "receiveuserid");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridIn(List<Integer> values) {
            addCriterion("receiveuserid in", values, "receiveuserid");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridNotIn(List<Integer> values) {
            addCriterion("receiveuserid not in", values, "receiveuserid");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridBetween(Integer value1, Integer value2) {
            addCriterion("receiveuserid between", value1, value2, "receiveuserid");
            return (Criteria) this;
        }

        public Criteria andReceiveuseridNotBetween(Integer value1, Integer value2) {
            addCriterion("receiveuserid not between", value1, value2, "receiveuserid");
            return (Criteria) this;
        }

        public Criteria andReadflagIsNull() {
            addCriterion("readflag is null");
            return (Criteria) this;
        }

        public Criteria andReadflagIsNotNull() {
            addCriterion("readflag is not null");
            return (Criteria) this;
        }

        public Criteria andReadflagEqualTo(Integer value) {
            addCriterion("readflag =", value, "readflag");
            return (Criteria) this;
        }

        public Criteria andReadflagNotEqualTo(Integer value) {
            addCriterion("readflag <>", value, "readflag");
            return (Criteria) this;
        }

        public Criteria andReadflagGreaterThan(Integer value) {
            addCriterion("readflag >", value, "readflag");
            return (Criteria) this;
        }

        public Criteria andReadflagGreaterThanOrEqualTo(Integer value) {
            addCriterion("readflag >=", value, "readflag");
            return (Criteria) this;
        }

        public Criteria andReadflagLessThan(Integer value) {
            addCriterion("readflag <", value, "readflag");
            return (Criteria) this;
        }

        public Criteria andReadflagLessThanOrEqualTo(Integer value) {
            addCriterion("readflag <=", value, "readflag");
            return (Criteria) this;
        }

        public Criteria andReadflagIn(List<Integer> values) {
            addCriterion("readflag in", values, "readflag");
            return (Criteria) this;
        }

        public Criteria andReadflagNotIn(List<Integer> values) {
            addCriterion("readflag not in", values, "readflag");
            return (Criteria) this;
        }

        public Criteria andReadflagBetween(Integer value1, Integer value2) {
            addCriterion("readflag between", value1, value2, "readflag");
            return (Criteria) this;
        }

        public Criteria andReadflagNotBetween(Integer value1, Integer value2) {
            addCriterion("readflag not between", value1, value2, "readflag");
            return (Criteria) this;
        }

        public Criteria andSendflagIsNull() {
            addCriterion("sendflag is null");
            return (Criteria) this;
        }

        public Criteria andSendflagIsNotNull() {
            addCriterion("sendflag is not null");
            return (Criteria) this;
        }

        public Criteria andSendflagEqualTo(Integer value) {
            addCriterion("sendflag =", value, "sendflag");
            return (Criteria) this;
        }

        public Criteria andSendflagNotEqualTo(Integer value) {
            addCriterion("sendflag <>", value, "sendflag");
            return (Criteria) this;
        }

        public Criteria andSendflagGreaterThan(Integer value) {
            addCriterion("sendflag >", value, "sendflag");
            return (Criteria) this;
        }

        public Criteria andSendflagGreaterThanOrEqualTo(Integer value) {
            addCriterion("sendflag >=", value, "sendflag");
            return (Criteria) this;
        }

        public Criteria andSendflagLessThan(Integer value) {
            addCriterion("sendflag <", value, "sendflag");
            return (Criteria) this;
        }

        public Criteria andSendflagLessThanOrEqualTo(Integer value) {
            addCriterion("sendflag <=", value, "sendflag");
            return (Criteria) this;
        }

        public Criteria andSendflagIn(List<Integer> values) {
            addCriterion("sendflag in", values, "sendflag");
            return (Criteria) this;
        }

        public Criteria andSendflagNotIn(List<Integer> values) {
            addCriterion("sendflag not in", values, "sendflag");
            return (Criteria) this;
        }

        public Criteria andSendflagBetween(Integer value1, Integer value2) {
            addCriterion("sendflag between", value1, value2, "sendflag");
            return (Criteria) this;
        }

        public Criteria andSendflagNotBetween(Integer value1, Integer value2) {
            addCriterion("sendflag not between", value1, value2, "sendflag");
            return (Criteria) this;
        }

        public Criteria andCreatebyIsNull() {
            addCriterion("createby is null");
            return (Criteria) this;
        }

        public Criteria andCreatebyIsNotNull() {
            addCriterion("createby is not null");
            return (Criteria) this;
        }

        public Criteria andCreatebyEqualTo(Integer value) {
            addCriterion("createby =", value, "createby");
            return (Criteria) this;
        }

        public Criteria andCreatebyNotEqualTo(Integer value) {
            addCriterion("createby <>", value, "createby");
            return (Criteria) this;
        }

        public Criteria andCreatebyGreaterThan(Integer value) {
            addCriterion("createby >", value, "createby");
            return (Criteria) this;
        }

        public Criteria andCreatebyGreaterThanOrEqualTo(Integer value) {
            addCriterion("createby >=", value, "createby");
            return (Criteria) this;
        }

        public Criteria andCreatebyLessThan(Integer value) {
            addCriterion("createby <", value, "createby");
            return (Criteria) this;
        }

        public Criteria andCreatebyLessThanOrEqualTo(Integer value) {
            addCriterion("createby <=", value, "createby");
            return (Criteria) this;
        }

        public Criteria andCreatebyIn(List<Integer> values) {
            addCriterion("createby in", values, "createby");
            return (Criteria) this;
        }

        public Criteria andCreatebyNotIn(List<Integer> values) {
            addCriterion("createby not in", values, "createby");
            return (Criteria) this;
        }

        public Criteria andCreatebyBetween(Integer value1, Integer value2) {
            addCriterion("createby between", value1, value2, "createby");
            return (Criteria) this;
        }

        public Criteria andCreatebyNotBetween(Integer value1, Integer value2) {
            addCriterion("createby not between", value1, value2, "createby");
            return (Criteria) this;
        }

        public Criteria andCreatedateIsNull() {
            addCriterion("createdate is null");
            return (Criteria) this;
        }

        public Criteria andCreatedateIsNotNull() {
            addCriterion("createdate is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedateEqualTo(Date value) {
            addCriterion("createdate =", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateNotEqualTo(Date value) {
            addCriterion("createdate <>", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateGreaterThan(Date value) {
            addCriterion("createdate >", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateGreaterThanOrEqualTo(Date value) {
            addCriterion("createdate >=", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateLessThan(Date value) {
            addCriterion("createdate <", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateLessThanOrEqualTo(Date value) {
            addCriterion("createdate <=", value, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateIn(List<Date> values) {
            addCriterion("createdate in", values, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateNotIn(List<Date> values) {
            addCriterion("createdate not in", values, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateBetween(Date value1, Date value2) {
            addCriterion("createdate between", value1, value2, "createdate");
            return (Criteria) this;
        }

        public Criteria andCreatedateNotBetween(Date value1, Date value2) {
            addCriterion("createdate not between", value1, value2, "createdate");
            return (Criteria) this;
        }

        public Criteria andUpdatebyIsNull() {
            addCriterion("updateby is null");
            return (Criteria) this;
        }

        public Criteria andUpdatebyIsNotNull() {
            addCriterion("updateby is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatebyEqualTo(Integer value) {
            addCriterion("updateby =", value, "updateby");
            return (Criteria) this;
        }

        public Criteria andUpdatebyNotEqualTo(Integer value) {
            addCriterion("updateby <>", value, "updateby");
            return (Criteria) this;
        }

        public Criteria andUpdatebyGreaterThan(Integer value) {
            addCriterion("updateby >", value, "updateby");
            return (Criteria) this;
        }

        public Criteria andUpdatebyGreaterThanOrEqualTo(Integer value) {
            addCriterion("updateby >=", value, "updateby");
            return (Criteria) this;
        }

        public Criteria andUpdatebyLessThan(Integer value) {
            addCriterion("updateby <", value, "updateby");
            return (Criteria) this;
        }

        public Criteria andUpdatebyLessThanOrEqualTo(Integer value) {
            addCriterion("updateby <=", value, "updateby");
            return (Criteria) this;
        }

        public Criteria andUpdatebyIn(List<Integer> values) {
            addCriterion("updateby in", values, "updateby");
            return (Criteria) this;
        }

        public Criteria andUpdatebyNotIn(List<Integer> values) {
            addCriterion("updateby not in", values, "updateby");
            return (Criteria) this;
        }

        public Criteria andUpdatebyBetween(Integer value1, Integer value2) {
            addCriterion("updateby between", value1, value2, "updateby");
            return (Criteria) this;
        }

        public Criteria andUpdatebyNotBetween(Integer value1, Integer value2) {
            addCriterion("updateby not between", value1, value2, "updateby");
            return (Criteria) this;
        }

        public Criteria andUpdatedateIsNull() {
            addCriterion("updatedate is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedateIsNotNull() {
            addCriterion("updatedate is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedateEqualTo(Date value) {
            addCriterion("updatedate =", value, "updatedate");
            return (Criteria) this;
        }

        public Criteria andUpdatedateNotEqualTo(Date value) {
            addCriterion("updatedate <>", value, "updatedate");
            return (Criteria) this;
        }

        public Criteria andUpdatedateGreaterThan(Date value) {
            addCriterion("updatedate >", value, "updatedate");
            return (Criteria) this;
        }

        public Criteria andUpdatedateGreaterThanOrEqualTo(Date value) {
            addCriterion("updatedate >=", value, "updatedate");
            return (Criteria) this;
        }

        public Criteria andUpdatedateLessThan(Date value) {
            addCriterion("updatedate <", value, "updatedate");
            return (Criteria) this;
        }

        public Criteria andUpdatedateLessThanOrEqualTo(Date value) {
            addCriterion("updatedate <=", value, "updatedate");
            return (Criteria) this;
        }

        public Criteria andUpdatedateIn(List<Date> values) {
            addCriterion("updatedate in", values, "updatedate");
            return (Criteria) this;
        }

        public Criteria andUpdatedateNotIn(List<Date> values) {
            addCriterion("updatedate not in", values, "updatedate");
            return (Criteria) this;
        }

        public Criteria andUpdatedateBetween(Date value1, Date value2) {
            addCriterion("updatedate between", value1, value2, "updatedate");
            return (Criteria) this;
        }

        public Criteria andUpdatedateNotBetween(Date value1, Date value2) {
            addCriterion("updatedate not between", value1, value2, "updatedate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table md_notice
     *
     * @mbggenerated do_not_delete_during_merge Tue Nov 21 13:51:33 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table md_notice
     *
     * @mbggenerated Tue Nov 21 13:51:33 CST 2017
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}